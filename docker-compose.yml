version: "3.7"

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.api.address=:8000"
      - "--entrypoints.parking_permit.address=:8001"
      - "--entrypoints.student_card.address=:8002"
    ports:
      - 80:80
      - 8000:8000
      - 8001:8001
      - 8002:8002
      - 8080:8080 # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web

  postgres_backend:
    image: postgres:12
    container_name: db-backend
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5000:5432"
    volumes:
      - db-data:/var/lib/postgresql/data:cached
    networks:
      - web

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    environment:
      PYTHONPATH: .
      DATABASE_URL: "postgresql://postgres:postgres@postgres_backend:5432/postgres"
    depends_on:
      - "postgres_backend"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`localhost`, `127.0.0.1`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=api"
      - "traefik.http.services.backend.loadbalancer.server.port=8888"
    networks:
      - web

  postgres_parking_permit:
    image: postgres:12
    container_name: db-parking_permit
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: parking_permit
    ports:
      - "5001:5432"
    volumes:
      - parking-permit-db-data:/var/lib/postgresql/data:cached
    networks:
      - web

  parking_permit:
    build:
      context: ./services/parking_permit
      dockerfile: Dockerfile
    container_name: parking_permit
    volumes:
      - ./services/parking_permit:/app/:cached
    depends_on:
      - "postgres_parking_permit"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres_parking_permit:5432/parking_permit"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.parking_permit.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.parking_permit.entrypoints=parking_permit"
      - "traefik.http.services.parking_permit.loadbalancer.server.port=8001"
    networks:
      - web

  postgres_student_card:
    image: postgres:12
    container_name: db-student_card
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: student_card
    ports:
      - "5002:5432"
    volumes:
      - student-card-db-data:/var/lib/postgresql/data:cached
    networks:
      - web

  student_card:
    build:
      context: ./services/student_card
      dockerfile: Dockerfile
    container_name: student_card
    volumes:
      - ./services/student_card:/app/:cached
    depends_on:
      - "postgres_student_card"
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres_student_card:5432/student_card"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.student_card.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.student_card.entrypoints=student_card"
      - "traefik.http.services.student_card.loadbalancer.server.port=8002"
    networks:
      - web

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: frontend
    stdin_open: true
    volumes:
      - "./frontend:/app:cached"
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`, `127.0.0.1`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - web

volumes:
  db-data:
  parking-permit-db-data:
  student-card-db-data:
  node_modules:

networks:
  web:
